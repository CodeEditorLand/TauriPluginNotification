if("__TAURI__"in window){var __TAURI_PLUGIN_NOTIFICATION__=function(n){"use strict";function e(n,e,i,t){if("function"==typeof e?n!==e||!t:!e.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e.get(n)}function i(n,e,i,t,o){if("function"==typeof e?n!==e||!o:!e.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e.set(n,i),i}var t,o,r,a,c,s;"function"==typeof SuppressedError&&SuppressedError;class u{constructor(){this.__TAURI_CHANNEL_MARKER__=!0,t.set(this,(()=>{})),o.set(this,0),r.set(this,{}),this.id=function(n,e=!1){return window.__TAURI_INTERNALS__.transformCallback(n,e)}((({message:n,id:a})=>{if(a===e(this,o)){i(this,o,a+1),e(this,t).call(this,n);const c=Object.keys(e(this,r));if(c.length>0){let n=a+1;for(const i of c.sort()){if(parseInt(i)!==n)break;{const o=e(this,r)[i];delete e(this,r)[i],e(this,t).call(this,o),n+=1}}}}else e(this,r)[a.toString()]=n}))}set onmessage(n){i(this,t,n)}get onmessage(){return e(this,t)}toJSON(){return`__CHANNEL__:${this.id}`}}t=new WeakMap,o=new WeakMap,r=new WeakMap;class l{constructor(n,e,i){this.plugin=n,this.event=e,this.channelId=i}async unregister(){return d(`plugin:${this.plugin}|remove_listener`,{event:this.event,channelId:this.channelId})}}async function f(n,e,i){const t=new u;return t.onmessage=i,d(`plugin:${n}|register_listener`,{event:e,handler:t}).then((()=>new l(n,e,t.id)))}async function d(n,e={},i){return window.__TAURI_INTERNALS__.invoke(n,e,i)}n.ScheduleEvery=void 0,(a=n.ScheduleEvery||(n.ScheduleEvery={})).Year="year",a.Month="month",a.TwoWeeks="twoWeeks",a.Week="week",a.Day="day",a.Hour="hour",a.Minute="minute",a.Second="second";return n.Importance=void 0,(c=n.Importance||(n.Importance={}))[c.None=0]="None",c[c.Min=1]="Min",c[c.Low=2]="Low",c[c.Default=3]="Default",c[c.High=4]="High",n.Visibility=void 0,(s=n.Visibility||(n.Visibility={}))[s.Secret=-1]="Secret",s[s.Private=0]="Private",s[s.Public=1]="Public",n.Schedule=class{static at(n,e=!1,i=!1){return{at:{date:n,repeating:e,allowWhileIdle:i},interval:void 0,every:void 0}}static interval(n,e=!1){return{at:void 0,interval:{interval:n,allowWhileIdle:e},every:void 0}}static every(n,e,i=!1){return{at:void 0,interval:void 0,every:{interval:n,count:e,allowWhileIdle:i}}}},n.active=async function(){return d("plugin:notification|get_active")},n.cancel=async function(n){return d("plugin:notification|cancel",{notifications:n})},n.cancelAll=async function(){return d("plugin:notification|cancel")},n.channels=async function(){return d("plugin:notification|listChannels")},n.createChannel=async function(n){return d("plugin:notification|create_channel",{...n})},n.isPermissionGranted=async function(){return"default"!==window.Notification.permission?Promise.resolve("granted"===window.Notification.permission):d("plugin:notification|is_permission_granted")},n.onAction=async function(n){return f("notification","actionPerformed",n)},n.onNotificationReceived=async function(n){return f("notification","notification",n)},n.pending=async function(){return d("plugin:notification|get_pending")},n.registerActionTypes=async function(n){return d("plugin:notification|register_action_types",{types:n})},n.removeActive=async function(n){return d("plugin:notification|remove_active",{notifications:n})},n.removeAllActive=async function(){return d("plugin:notification|remove_active")},n.removeChannel=async function(n){return d("plugin:notification|delete_channel",{id:n})},n.requestPermission=async function(){return window.Notification.requestPermission()},n.sendNotification=function(n){"string"==typeof n?new window.Notification(n):new window.Notification(n.title,n)},n}({});Object.defineProperty(window.__TAURI__,"notification",{value:__TAURI_PLUGIN_NOTIFICATION__})}
